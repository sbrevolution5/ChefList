<MudForm>
    <MudGrid>

        <MudItem xs="4">

            <MudNumericField Label="Number" T="int" @bind-Value="qingredient.QuantityNumber"></MudNumericField>
        </MudItem>
        <MudItem xs="8">
            <MudSelect Label="Fraction" T="Fraction" @bind-Value="qingredient.Fraction">
                @foreach (Fraction frac in Enum.GetValues(typeof(Fraction)))
                {
                    <MudSelectItem Value="@frac">@frac</MudSelectItem>
                }
            </MudSelect>

        </MudItem>
        <MudItem xs="12">

            @if (measurementType == MeasurementType.Volume)
            {
                <MudSelect Label="Volume Measurement" T="VolumeMeasurementUnit?" @bind-Value="qingredient.VolumeMeasurementUnit">
                    @foreach (VolumeMeasurementUnit? measure in Enum.GetValues(typeof(VolumeMeasurementUnit)))
                    {
                        <MudSelectItem Value="@measure">@measure</MudSelectItem>
                    }
                </MudSelect>
            }
            else if (measurementType == MeasurementType.Mass)
            {
                <MudSelect Label="Mass Measurement" T="MassMeasurementUnit?" @bind-Value="qingredient.MassMeasurementUnit">
                    @foreach (MassMeasurementUnit? measure in Enum.GetValues(typeof(MassMeasurementUnit)))
                    {
                        <MudSelectItem Value="@measure">@measure</MudSelectItem>
                    }
                </MudSelect>
            }
            else if (measurementType == MeasurementType.Count)
            {

            }
            else
            {
                <MudText>Please select an ingredient</MudText>
            }
        </MudItem>
        <MudItem xs="12">

            <MudSelect Value="qingredient.IngredientId" T="int" ValueChanged="@((int id)=>MeasureChange(id))">
                @foreach (var ingredient in ingredientList)
                {
                    <MudSelectItem Value="@ingredient.Id">@ingredient.Name</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12">
            <MudTextField Label="Additional Notes" @bind-Value="qingredient.Notes"></MudTextField>
        </MudItem>
    </MudGrid>
</MudForm>
@code {
    [Parameter]
    public List<Ingredient> ingredientList { get; set; }
    [Parameter]
    public QIngredient qingredient { get; set; }
    public MeasurementType measurementType { get; set; }
    protected override void OnInitialized()
    {
        qingredient.IngredientId = ingredientList.First().Id;

        MeasureChange(qingredient.IngredientId);
    }
    public void MeasureChange(int id)
    {
        qingredient.IngredientId = id;
        measurementType = ingredientList.FirstOrDefault(i => i.Id == id).MeasurementType;
        qingredient.MeasurementType = measurementType;
        return;
    }
}
