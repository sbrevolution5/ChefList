@inject IApiService _api
@inject NavigationManager _nav
<MudDialog>
    <DialogContent>
        <MudTextField Label="Supply Name" @bind-Value="supply.Name"></MudTextField>
        <MudText Color="Color.Error">Please do not add duplicate supplies.  Make sure your supply is not already in the database before you save!</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Dark">Cancel</MudButton>
        <MudButton Color="Color.Success" OnClick="CreateSupply" Variant="Variant.Filled">Save</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    private Supply supply { get; set; } = new();
    public void Cancel()
    {
        MudDialog.Cancel();
    }
    public async Task CreateSupply()
    {
        try
        {

            var supplyResult = await _api.CreateAsync<Supply,Supply>("api/supplies",supply);
            _snackbar.Add("Supply Created", Severity.Success);
            MudDialog.Close(DialogResult.Ok(supplyResult));
        }
        catch (Exception e)
        {
            _snackbar.Add($"Creation failed: {e.Message}, Your supply is probably already in the database.", Severity.Error);

        }
    }
}
