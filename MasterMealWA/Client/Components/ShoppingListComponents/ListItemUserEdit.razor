@using MasterMealWA.Shared.Models.Dtos
@inject IApiService _api
<MudDialog>
    <DialogContent>

        <MudTextField T="string" @bind-Text="listItem.QuantityString" Label="Type item quantity/name here." HelperText="Will add a simple plaintext element">
        </MudTextField>
        <MudSelect Label="Ingredient Type" HelperText="Where you'd find the ingredient while shopping" @bind-Value="listItem.IngredientTypeId">
            @foreach (var type in types)
            {
                <MudSelectItem Value="@type.Id">@type.Name</MudSelectItem>
            }
        </MudSelect>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Dark">Cancel</MudButton>
        <MudButton Color="Color.Success" OnClick="EditItem" Variant="Variant.Filled">Edit</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public int listId { get; set; }
    [Parameter]
    public List<IngredientType> types { get; set; }
    [Parameter]
    public ShoppingIngredient listItem { get; set; }
    protected override void OnInitialized()
    {
        listItem.UserString = true;
        base.OnInitialized();
    }
    public void Cancel()
    {
        MudDialog.Cancel();
    }
    public async Task EditItem()
    {
        try
        {
            await _api.UpdateAsync<ShoppingIngredient>("/api/ShoppingIngredients/", listItem);
            _snackbar.Add("Item Edited", Severity.Success);
            MudDialog.Close(DialogResult.Ok<ShoppingIngredient>(listItem));
        }
        catch (Exception e)
        {
            _snackbar.Add($"Could not edit Item {e.Message}", Severity.Error);
        }

    }
}
