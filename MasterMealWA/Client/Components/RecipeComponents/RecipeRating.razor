@inject IApiService _api
<MudHidden IsHidden="@string.IsNullOrEmpty(UserId)">
    <MudRating SelectedValue="userRating"  ReadOnly="ReadOnly" SelectedValueChanged="(int i)=>SaveRating(i)"></MudRating>
</MudHidden>
<MudRating SelectedValue="AverageRating" ReadOnly="true"></MudRating>
@code {
    [Parameter]
    public Recipe recipe { get; set; }
    [Parameter]
    public string UserId { get; set; }
    public int AverageRating { get; set; }
    public int userRating { get; set; }
    public bool ReadOnly { get; set; }
    public async Task<bool> SaveRating(int i)
    {
        return await _api.CreateNewRatingAsync(recipe.Id, UserId, i);
    }
    protected override void OnInitialized()
    {
        if (recipe.Ratings.Any())
        {
                AverageRating = Convert.ToInt32(recipe.AvgRating);
            if (!string.IsNullOrEmpty(UserId))
            {
                userRating = recipe.Ratings.Where(r => r.ChefId == UserId).FirstOrDefault().Stars;

            }
        }
        else
        {
            AverageRating = 0;
        }
        base.OnInitialized();
    }
}
