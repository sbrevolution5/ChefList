@inject IApiService _api
@inject IUserService _userService
@attribute [Authorize]
<MudDialog>
    <DialogContent>

        @if (recipes == null || meal == null)
        {
            <Loader></Loader>

        }
        else
        {
            <MudDatePicker Label="Date" HelperText="When do you plan to have the meal?" @bind-Date="mealdate"></MudDatePicker>
            <MudNumericField Label="Servings" HelperText="How Many people will be eating?" @bind-Value="meal.Serves"></MudNumericField>
            <MudSelect Label="Recipe" @bind-Value="meal.RecipeId" HelperText="Which meal are you eating?">
                @foreach (var recipe in recipes)
                    {

                    <MudSelectItem Value="recipe.Id">
                        @recipe.Name
                    </MudSelectItem>
                    }
            </MudSelect>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Dark">Cancel</MudButton>
        <MudButton Color="Color.Success" OnClick="CreateMeal" Variant="Variant.Filled">Save</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public Recipe recipe { get; set; }
    [Parameter]
    public int? Servings { get; set; }
    private DateTime? mealdate { get; set; } = DateTime.Today;
    private Meal meal;
    private List<Recipe> recipes;
    protected override async Task OnInitializedAsync()
    {
        recipes = await _api.GetAllRecipesAsync(true);
        if (recipe is null)
        {
            recipe = recipes.FirstOrDefault();
        }
        if (Servings is null)
        {
            Servings = recipe.Servings;
        }
        meal = new()
        {
            RecipeId = recipe.Id,
            Serves = Servings.Value,
            Date = DateTime.Today
        };
    }
    public async Task CreateMeal()
    {
        meal.Date = mealdate.Value;
        meal.ChefId = await _userService.GetUserIdAsync();
        meal.ImageId = recipes.Where(r => r.Id == meal.RecipeId).FirstOrDefault().ImageId;
        await _api.CreateNewMealAsync(meal);
        MudDialog.Close(DialogResult.Ok(meal));
    }
    public void Cancel()
    {
        MudDialog.Cancel();
    }
}
