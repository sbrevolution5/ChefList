@inject IApiService _api
@attribute [Authorize(Roles = ("Admin,Moderator"))]
<MudDialog>
    <DialogContent>

        
            <MudText>@meal.Recipe.Name</MudText>
            <MudText>@meal.Date.ToShortDateString()</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Dark">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="ConfirmDelete" Variant="Variant.Filled">Delete Meal</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }
    public Recipe recipe { get; set; }
    [Parameter]
    public Meal meal { get; set; }
    private List<Recipe> recipes;
    public async Task ConfirmDelete()
    {
        try
        {

        await _api.DeleteAsync($"api/meals/{meal.Id}");
            _snackbar.Add("Meal Deleted", Severity.Success);
        MudDialog.Close(DialogResult.Ok(meal));
        }
        catch (Exception e)
        {
            _snackbar.Add($"Delete failed: {e.Message}", Severity.Error);
        }
    }
    public void Cancel()
    {
        MudDialog.Cancel();
    }
}