@page "/supplies"
@inject IApiService _api
@inject IDialogService _dialogService
@if (Supplies is null)
{
    <MudText>Loading...</MudText>
}
else
{
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h3">Supplies</MudText>

        </MudCardHeader>
        <MudCardContent>

            <MudList>

                @foreach (var supply in Supplies)
                {
                    <MudListItem>
                        <MudPaper Elevation="2">
                            <MudGrid>

                                <MudItem xs="8">

                                    <MudText>

                                        @supply.Name
                                    </MudText>
                                </MudItem>
                                <MudItem xs="4">

                                    <MudButtonGroup>
                                        <MudIconButton Variant="Variant.Filled" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" OnClick="@(()=>EditSupply(supply))"></MudIconButton>
                                    </MudButtonGroup>
                                </MudItem>
                            </MudGrid>
                        </MudPaper>
                    </MudListItem>
                }
            </MudList>
            <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.Add" aria-label="add" OnClick="NewSupply" />
        </MudCardContent>
    </MudCard>
}
@code {
    public List<Supply> Supplies { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Supplies = await _api.GetAllSuppliesAsync();
        base.OnInitialized();
    }
    public async Task NewSupply()
    {
        var dialog = _dialogService.Show<SupplyCreate>("New Supply");
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            Supplies = await _api.GetAllSuppliesAsync();
        }
    }
    public async Task EditSupply(Supply supply)
    {
        var parameters = new DialogParameters { ["Supply"] = supply };
        var dialog = _dialogService.Show<SupplyEdit>("Edit Supply", parameters);
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            Supplies = await _api.GetAllSuppliesAsync();
        }
    }
}
