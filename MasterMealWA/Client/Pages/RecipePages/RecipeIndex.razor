@page "/recipe"
@inject HttpClient Http
@inject NavigationManager nav
@if (recipes is null)
{
    <MudOverlay>

        <MudText>Loading....</MudText>
    </MudOverlay>
}
else
{
    @foreach (var recipe in recipes)
    {

        <MudCard>
            <MudCardHeader>

                <MudText>@recipe.Name</MudText>
            </MudCardHeader>
            <MudCardContent>

                <MudText>@recipe.CookingTime</MudText>
                <MudText>@recipe.Servings</MudText>
                <MudButton @onclick='()=>nav.NavigateTo($"/recipe/details/{recipe.Id}")'>Details</MudButton>
            </MudCardContent>
        </MudCard>
    }
    <MudFab Icon="@Icons.Material.Filled.Add" Color="Color.Primary" Label="Add Recipe" aria-label="add recipe" @onclick='()=>nav.NavigateTo("/recipe/create")' />
}
@code {
    private List<Recipe> recipes;
    protected override async Task OnInitializedAsync()
    {
        var options = new JsonSerializerOptions()
        {
            ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.Preserve,
            PropertyNamingPolicy = null
        };
        recipes = await Http.GetFromJsonAsync<List<Recipe>>("Api/recipes", options);
        base.OnInitialized();
    }
}
