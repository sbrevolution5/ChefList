@page "/recipes"
@inject HttpClient Http
@inject NavigationManager nav
@if (recipes is null)
{
    <MudOverlay>

        <MudText>Loading....</MudText>
    </MudOverlay>
}
else
{
    @foreach (var recipe in recipes)
    {
<MudCard>
    <MudText>@recipe.Name</MudText>
    <MudText>@recipe.CookingTime</MudText>
    <MudText>@recipe.Servings</MudText>
    <MudIconButton Variant="Variant.Filled" Color="Color.Primary" Icon="@Icons.Material.Filled.Edit" Link=@($"/recipes/edit/{recipe.Id}")></MudIconButton>
    <MudLink Href="@($"/recipes/details/{recipe.Id}")">Details</MudLink>
</MudCard>

    }
    <MudFab Icon="@Icons.Material.Filled.Add" Color="Color.Primary" Label="Add Recipe" aria-label="add recipe" @onclick='()=>nav.NavigateTo("/recipes/create")' />
}
@code {
    private List<Recipe> recipes;
    protected override async Task OnInitializedAsync()
    {
        var options = new JsonSerializerOptions()
        {
            ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.Preserve,
            PropertyNamingPolicy = null
        };
        recipes = await Http.GetFromJsonAsync<List<Recipe>>("Api/recipes", options);
        base.OnInitialized();
    }
}
